@model IEnumerable<Table.Models.Task>
@{
    List<SelectListItem> priorityList = new List<SelectListItem>();
    priorityList.Add(new SelectListItem()
    {
        Text = "A",
        Value = "A",
        Selected = true
    });
    priorityList.Add(new SelectListItem()
    {
        Text = "B",
        Value = "B",
    });
    priorityList.Add(new SelectListItem()
    {
        Text = "C",
        Value = "C"
    });
    priorityList.Add(new SelectListItem()
    {
        Text = "D",
        Value = "D"
    });
}
<div class="row">
    @foreach (var p in priorityList)
    {
        <div id="table_holder">
            <table class="col-md-6 col-sm-6 col-xs-6 table-bordered table-condensed task_table bg-danger" id="first_table">
                <thead>
                    <tr>
                        <th>
                            Описание @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Description" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" },
                        new { @class = "glyphicon glyphicon-chevron-down" })
                        </th>
                        <th>Дата @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Data" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })</th>
                        <th>Приоритет @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Priority" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })</th>
                        <th>№ @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Number" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })</th>
                        <th>
                            <span class="glyphicon glyphicon-check" style="color:#2f2e2e"></span>
                            @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "IsCompleted" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })
                        </th>
                        <th colspan="2"></th>
                    </tr>
                </thead>
                <tbody id="tablebody">
                    @foreach (var t in Model)
                {
                    if (!t.Priority.Contains(p.Value))
                    {
                        continue;
                    }
                    <tr>
                        <td>
                            <div class="value-holder description-value">@Html.DisplayFor(item => t.Description)</div>
                            <div class="edit-holder description-edit"><input type="text" value="@t.Description"></div>
                        </td>
                        <td>
                            <div class="value-holder data-value">@Html.DisplayFor(item => t.Data)</div>
                            <div class="edit-holder data-edit">@Html.EditorFor(item => t.Data)</div>
                        </td>
                        <td>
                            <div class="value-holder priority-value">@Html.DisplayFor(item => t.Priority)</div>
                            <select class="edit-holder priority-edit">
                                <option value="A">A</option>
                                <option value="B">B</option>
                                <option value="C">C</option>
                                <option value="D">D</option>
                            </select>
                        </td>
                        <td>
                            <div class="value-holder number-value">@Html.DisplayFor(item => t.Number)</div>
                            <div class="edit-holder number-edit">@Html.EditorFor(item => t.Number)</div>
                        </td>
                        @if (t.IsComplete)
                        {
                            <td><input type="checkbox" class="check" checked="checked" onchange="TaskStatusChanged(this)" id="@t.Id"></td>
                        }
                        else
                        {
                            <td><input class="check" type="checkbox" onchange="TaskStatusChanged(this)" id="@t.Id" /></td>
                        }
                        <td>
                            <a onclick="EditTask()" class="edit"><span class="glyphicon glyphicon-edit"></span></a>
                            <a onclick="SaveTask()" style="display:none" class="save"><span class="glyphicon glyphicon-floppy-disk"></span></a>
                        </td>
                        <td>@Ajax.ActionLink(" ", "DeleteTask", "Task", new { id = @t.Id.ToString() }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-remove" })</td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    </div>
    <script>
        $(".edit-holder").hide();
        $("table:eq(0) td").css("background-color", "#F794D8");
        $("table:eq(1) td").css("background-color", "#94A6F7");
        $("table:eq(2) td").css("background-color", "#F7E594")
        $("table:eq(3) td").css("background-color", "#94F7B4")
    </script>
