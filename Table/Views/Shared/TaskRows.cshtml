@model IEnumerable<Table.Models.Task>
@{
    List<SelectListItem> priorityList = new List<SelectListItem>();
    priorityList.Add(new SelectListItem()
    {
        Text = "A",
        Value = "A",
    });
    priorityList.Add(new SelectListItem()
    {
        Text = "B",
        Value = "B",
    });
    priorityList.Add(new SelectListItem()
    {
        Text = "C",
        Value = "C"
    });
    priorityList.Add(new SelectListItem()
    {
        Text = "D",
        Value = "D"
    });
}
<div class="row">
    <table class="table table-striped table-condensed table-bordered">
        <thead>
            <tr class="row">
                <th class="desc-column">
                    Описание @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Description" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })
                </th>
                <th class="data-column">Дата @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Data" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })</th>
                <th class="priority-column">Приоритет @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Priority" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })</th>
                <th class="number-column">№ @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "Number" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })</th>
                <th class="complete-column">
                    <span class="glyphicon glyphicon-check" style="color:#2f2e2e"></span>
                    @Ajax.ActionLink(" ", "OrderTasks", "Task", new { prop = "IsComplete" }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-chevron-down" })
                </th>
                <th colspan="2" class="control-column"></th>
            </tr>
        </thead>
        <tbody id="tablebody">
            @foreach (var t in Model)
            {
                <tr class="row">
                    <td class="desc-column">
                        <div class="value-holder description-value">@Html.DisplayFor(item => t.Description)</div>
                        <div class="edit-holder description-edit">@Html.EditorFor(item => t.Description)</div>
                    </td>
                    <td class="data-column">
                        <div class="value-holder data-value">@Html.DisplayFor(item => t.Data)</div>
                        <div class='edit-holder data-edit'>@Html.EditorFor(item => t.Data, new { @type="datetime-local"})</div>
                    </td>
                    <td class="priority-column">
                        <div class="value-holder priority-value">@Html.DisplayFor(item => t.Priority)</div>
                        <select class="edit-holder priority-edit" id="priority-select">
                            <option value=" "> </option>
                            <option value="A">A</option>
                            <option value="B">B</option>
                            <option value="C">C</option>
                            <option value="D">D</option>
                        </select>
                    </td>
                    <td class="number-column">
                        <div class="value-holder number-value">@Html.DisplayFor(item => t.Number)</div>
                        <div class="edit-holder number-edit" id="number-edit-holder">@Html.EditorFor(item => t.Number)</div>
                    </td>
                    @if (t.IsComplete == true)
                {
                        <td class="complete-column"><input type="checkbox" class="check" checked="checked" onchange="TaskStatusChanged(this)" id="@t.Id"></td>
                    }
                    else
                    {
                        <td class="complete-column"><input class="check" type="checkbox" onchange="TaskStatusChanged(this)" id="@t.Id" /></td>
                    }
                    <td>
                        <a onclick="EditTask()" class="edit"><span class="glyphicon glyphicon-edit"></span></a>
                        <a onclick="SaveTask()" style="display:none" class="save"><span class="glyphicon glyphicon-floppy-disk"></span></a>
                    </td>
                    <td>@Ajax.ActionLink(" ", "DeleteTask", "Task", new { id = @t.Id.ToString() }, new AjaxOptions { UpdateTargetId = "TaskTableHolder" }, new { @class = "glyphicon glyphicon-remove" })</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    $(".edit-holder").hide();
</script>