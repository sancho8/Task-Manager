@model IEnumerable<Table.Models.Task>
@foreach (var t in Model)
            {
    <tr>
        <td>
            <div class="value-holder">@Html.DisplayFor(item => t.Description)</div>
            <div class="edit-holder">@Html.EditorFor(item => t.Description)</div>
        </td>
        <td>
            <div class="value-holder">@Html.DisplayFor(item => t.Data)</div>
            <div class="edit-holder">@Html.EditorFor(item => t.Data)</div>
        </td>
        <td>
            <div class="value-holder">@Html.DisplayFor(item => t.Priority)</div>
            <div class="edit-holder">@Html.EditorFor(item => t.Priority)</div>
        </td>
        <td>
            <div class="value-holder">@Html.DisplayFor(item => t.Number)</div>
            <div class="edit-holder">@Html.EditorFor(item => t.Number)</div>
        </td>
        @if (t.IsComplete)
        {
            <td><input type="checkbox" checked="checked" onchange="TaskStatusChanged(this)" id="@t.Id"></td>
        }
        else
        {
            <td><input type="checkbox" onchange="TaskStatusChanged(this)" id="@t.Id" /></td>
        }
        <td>
            <a onclick="EditTask()" class="edit"><span class="glyphicon glyphicon-edit"></span></a>
            <a onclick="SaveTask()" style="display:none" class="save"><span class="glyphicon glyphicon-floppy-disk"></span></a>
        </td>
        <td>@Ajax.ActionLink(" ", "DeleteTask", "Task", new { id = @t.Id.ToString() }, new AjaxOptions { UpdateTargetId = "tablebody" }, new { @class = "glyphicon glyphicon-remove" })</td>
    </tr>
}