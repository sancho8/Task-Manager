@model Table.Models.User
@{
    ViewBag.Title = "Home";
}
@section Header{
    <header class="row">
        <nav class="navbar">
            <div class="container-fluid">
                <div class="navbar-header">
                    <p class="navbar-brand" id="title-holder">Doer</p>
                </div>
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Профиль", "MoveToPage", "Home", new { page = "Home" }, new { })</li>
                    <li>@Html.ActionLink("Задачи", "MoveToPage", "Home", new { page = "Tasks" }, new { })</li>
                    <li>@Html.ActionLink("О нас", "MoveToPage", "Home", new { page = "About" }, new { })</li>
                    <li>@Html.ActionLink("Контакты", "MoveToPage", "Home", new { page = "Contacts" }, new { })</li>
                </ul>
                @if (ViewBag.UserLogin == "")
                {
                    <ul class="nav navbar-nav navbar-right">
                        <li data-toggle="modal" data-target="#myModal"><a href="#"><span class="glyphicon glyphicon-user"></span>Регистрация</a></li>
                        <li data-toggle="modal" data-target="#login_modal"><a href="#"><span class="glyphicon glyphicon-log-in"></span>Войти</a></li>
                    </ul>
                }
                else
                {
                    <ul class="nav navbar-nav navbar-right">
                        <li onclick="MoveToHomePage()"><a href="#"><span class="glyphicon glyphicon-user" id="user-login-holder"></span>@ViewBag.UserLogin</a></li>
                        <li data-toggle="modal" data-target="#exit_modal"><a href="#"><span class="glyphicon glyphicon-log-out"></span>Выйти</a></li>
                    </ul>
                }
            </div>
        </nav>
        <div class="col-md-4 col-sm-4 col-xs-12 col-lg-4" id="logo-holder">
            <img src="~/Content/images/logo.png" id="logo" alt="logo" />
        </div>
        <div class="col-md-6 col-sm-4 col-xs-12 col-lg-6" id="slogan-holder">
            <h1>Менеджер задач</h1>
            <h3>Простой и удобный инструмент управления временем</h3>
        </div>
        <!--Social buttons
            <div class="col-md-3 col-sm-4 col-xs-12 col-lg-3" id="auth_box">
            <a class="btn btn-social-icon btn-facebook">
                <span class="fa fa-facebook"></span>
            </a>
            <a class="btn btn-social-icon btn-twitter">
                <span class="fa fa-twitter"></span>
            </a>
            <a class="btn btn-social-icon btn-vk">
                <span class="fa fa-vk"></span>
            </a>
            <a class="btn btn-social-icon btn-odnoklassniki">
                <span class="fa fa-odnoklassniki"></span>
            </a>
            <a class="btn btn-social-icon btn-google">
                <span class="fa fa-google"></span>
            </a>
            <p>Sign in by your favourite social network</p>
        </div>
        -->
    </header>
}
@section Footer{
    <footer class="row navbar-inverse">
        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 contact-info">
            Контакты: 98sancho@ukr.net
        </div>
        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 copyright">
            © Александр Ярошенко | КА "ШАГ" 2016
        </div>
    </footer>
}
<script src="~/scripts/Chart.min.js"></script>
<section class="row">
    <div id="container">
        <div class="col-sm-12 col-xs-12 col-md-6 col-lg-6">
            @using (Html.BeginForm("UpdateProfile", "Profile", FormMethod.Post, new { @id = "ChangeProfileDataForm" }))
            {
                <div class="profile-inform-header">Информация профиля:</div>
                <div class="inform-box">
                    Логин:
                    <div class="field-value-holder" style="display:inline">
                        <p style="display:inline">@ViewBag.UserLogin</p>
                    </div>
                    <div class="field-redact-holder" id="change-login-field">
                        @Html.EditorFor(x => Model.Login, "", "login")
                    </div>
                </div>
                <div class="inform-box">
                    Почта:
                    @if (!String.IsNullOrWhiteSpace(ViewBag.UserEmail))
                    {
                    <div class="field-value-holder" style="display:inline">
                        <p style="display:inline">@ViewBag.UserEmail</p>
                    </div>
                    <div class="field-redact-holder" id="change-email-field">
                        @Html.EditorFor(x => Model.Email, "", "email")
                    </div>
                    }
                </div>
                <div class="field-redact-holder" id="old-password-field">
                    Введите старый пароль:&nbsp;&nbsp;
                    <input type="password" name="oldPassword" autocomplete="off">
                </div>
                <div class="field-redact-holder" id="new-password-field">
                    Введите новый пароль:&nbsp;&nbsp;&nbsp;&nbsp;
                    <input type="password" name="newPassword" autocomplete="off">
                </div>
                <div class="field-redact-holder" id="confirm-password-field">
                    Повторите новый пароль:
                    <input type="password" name="confirmPassword" autocomplete="off">
                </div>
                <div class="inform-box">
                    Получать уведомления:
                    @if (ViewBag.UserNeedDelivery == "true")
                {
                        <input type="checkbox" name="needDelivery" checked="checked" id="needDelivety-field" />
                    }
                    else
                    {
                        <input type="checkbox" name="needDelivery" id="needDelivety-field" />
                    }
                </div>

                <div id="change-profile-error-message-holder">@ViewBag.ValidateErrorMessage</div>

                <div class="redact-button-holder">
                    <button type="button" class="btn btn-primary" id="change-password-button">Редактировать профиль</button>
                </div>
                <div class="redact-button-holder">
                    <button type="submit" class="btn btn-warning" id="save-changes-button" onclick="ValidateUpdateProfileDataForm()">Сохранить изменения</button>
                    <button type="button" class="btn btn-default" id="reset-changes-button">Отменить изменения</button>
                </div>
            }
        </div>
        <div class="col-sm-12 col-xs-12 col-md-6 col-lg-6">
            <div class="profile-inform-header">Cтатистика профиля:</div>
            <div class="col-sm-12 col-xs-12 col-md-12 col-lg-12" id="TaskStatsDiagramHolder">
                <canvas id="TaskStatsDiagram" width="200" height="200" style="background-color:white"></canvas>
            </div>
            <script>
                var completed, uncompleted, up_to_date;
                window.onload = function() {
                    $.ajax({
                        type: "Get",
                        url: "/Profile/getTaskStats",
                        data: { param: "uncompleted" },
                        async: false,
                        success: function (result) {
                            uncompleted = result;
                        }
                    });
                    $.ajax({
                        type: "Get",
                        url: "/Profile/getTaskStats",
                        data: { param: "completed" },
                        async: false,
                        success: function (result) {
                            completed = result;
                        }
                    });
                    $.ajax({
                        type: "Get",
                        async: false,
                        url: "/Profile/getTaskStats",
                        data: { param: "up-to-date" },
                        success: function (result) {;
                            up_to_date = result;
                        }
                    });
                    var stat = [parseInt(completed), parseInt(up_to_date), parseInt(uncompleted), ];
                    var ctx = document.getElementById("TaskStatsDiagram").getContext("2d");;
                    ctx.canvas.width = 100;
                    ctx.canvas.height = 100;
                    var myData = {
                        datasets: [{
                            data: stat,
                            backgroundColor: [
                                "#36A2EB",
                                "#FF6384",
                                "#FFCE56"
                            ],
                            label: 'My dataset' // for legend
                        }],
                        labels: [
                            "Выполненые",
                            "Просроченные",
                            "Выполняются"
                        ]
                    };
                    var myChart = new Chart(ctx, {
                        type: 'doughnut',
                        data: myData,
                        options: {
                            responsive: true,
                            rotation: -0.5 * Math.PI
                        },
                        title: {
                            display: true,
                            text: 'Статистика задач'
                        }
                    });
                };
            </script>
        </div>
    </div>
</section>
